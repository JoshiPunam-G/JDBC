package com.bridgelabz.clinic;


import java.io.File;

import java.io.IOException;
import java.util.List;

import org.codehaus.jackson.map.ObjectMapper;
import org.codehaus.jackson.type.TypeReference;


import com.bridgelaz.clinic.model.Appointment;
import com.bridgelaz.clinic.model.Clinic;
import com.bridgelaz.clinic.model.Doctor;
import com.bridgelaz.clinic.model.Patient;
import com.bridgelaz.clinic.model.User;
import Utility.Utility;


public class ClinicImpl implements ClinicInterface{


	public static void main(String[] args) {
		
    ObjectMapper mapper=new ObjectMapper();
   
    
	try {
		List<User> userlist=mapper.readValue(new File(userfile), new TypeReference<List<User>>() {});
		
		List<Clinic> cliniclist=mapper.readValue(new File(clinicfile), new TypeReference<List<Clinic>>() {});
		
		List<Doctor> doctorlist=mapper.readValue(new File(doctorfile), new TypeReference<List<Doctor>>() {});
		
		List<Clinic> patientlist=mapper.readValue(new File(patientfile), new TypeReference<List<Patient>>() {});
		
		List<Appointment> appointmentlist=mapper.readValue(new File(appointmentfile), new TypeReference<List<Appointment>>() {});
			
		
		ClinicUtility utill=new ClinicUtility();
		
		//utill.addUser(userlist);
		//utill.addClinic(cliniclist);
		//utill.addDoctor(doctorlist);
		utill.addPatient(patientlist);
		}
	 catch (IOException e) {
		e.printStackTrace();
	}

	
	
	
	}


	
}
